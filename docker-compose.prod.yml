# Docker Compose Production Configuration
# Optimized for production deployment with external MongoDB Atlas

version: '3.8'

services:
  # Training Service (runs once)
  training-service:
    build:
      context: ./backend/training_service
      dockerfile: Dockerfile
      target: production
    container_name: superpage-training-prod
    restart: "no"
    environment:
      - MONGODB_URL=mongodb+srv://sakshammishra2402:0UrFl2PySve53nYe@cluster0.zjhsmyu.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - DATABASE_NAME=superpage
    volumes:
      - model_data:/app/models
      - ./Dataset:/app/Dataset:ro
    networks:
      - superpage-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Ingestion Service
  ingestion-service:
    build:
      context: ./backend/ingestion_service
      dockerfile: Dockerfile
      target: production
    container_name: superpage-ingestion-prod
    restart: unless-stopped
    ports:
      - "8010:8010"
    environment:
      - FIRECRAWL_API_KEY=fc-62e1fc5b845c40948b28fd133fbef7cf
      - MONGODB_URL=mongodb+srv://sakshammishra2402:0UrFl2PySve53nYe@cluster0.zjhsmyu.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - DATABASE_NAME=superpage
      - SERVICE_NAME=ingestion-service
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8010
      - WORKERS=4
    networks:
      - superpage-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      replicas: 2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Preprocessing Service
  preprocessing-service:
    build:
      context: ./backend/preprocessing_service
      dockerfile: Dockerfile
      target: production
    container_name: superpage-preprocessing-prod
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGODB_URL=mongodb+srv://sakshammishra2402:0UrFl2PySve53nYe@cluster0.zjhsmyu.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - DATABASE_NAME=superpage
      - TOKENIZER_MODEL=distilbert-base-uncased
      - MAX_TEXT_LENGTH=512
      - MAX_FEATURES=100
      - SCALER_TYPE=minmax
      - SERVICE_NAME=preprocessing-service
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8001
      - WORKERS=4
    networks:
      - superpage-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      replicas: 2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prediction Service
  prediction-service:
    build:
      context: ./backend/prediction_service
      dockerfile: Dockerfile
      target: production
    container_name: superpage-prediction-prod
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - MODEL_PATH=/app/models/latest/fundraising_model.pth
      - SCALER_PATH=/app/models/latest/scaler.pkl
      - SHAP_BACKGROUND_SAMPLES=100
      - SERVICE_NAME=prediction-service
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8002
      - WORKERS=4
    volumes:
      - model_data:/app/models:ro
    networks:
      - superpage-network
    depends_on:
      training-service:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      replicas: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Blockchain Service
  blockchain-service:
    build:
      context: ./backend/blockchain_service
      dockerfile: Dockerfile
      target: production
    container_name: superpage-blockchain-prod
    restart: unless-stopped
    ports:
      - "8003:8003"
    environment:
      - BLOCKCHAIN_PRIVATE_KEY=a8a6f100ed77edf366914903d669367174436ad272085a414f0a11033d04936e
      - SUPERPAGE_CONTRACT_ADDRESS=0x45341d82d59b3C4C43101782d97a4dBb97a42dba
      - BLOCKCHAIN_NETWORK_URL=https://sepolia.infura.io/v3/ea1e0f21469f412995bdaaa76ac1c266
      - HARDHAT_PROJECT_PATH=./
      - GAS_LIMIT=500000
      - GAS_PRICE=20000000000
      - PREDICTION_SERVICE_URL=http://prediction-service:8002
      - INFURA_PROJECT_ID=ea1e0f21469f412995bdaaa76ac1c266
      - ETHERSCAN_API_KEY=PEK4R6W3IDZGATUF3JDU7KTGBCGWM6UJRA
      - NODE_ENV=production
      - LOG_LEVEL=info
    networks:
      - superpage-network
    depends_on:
      - prediction-service
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      replicas: 2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    container_name: superpage-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - superpage-network
    depends_on:
      - ingestion-service
      - preprocessing-service
      - prediction-service
      - blockchain-service

networks:
  superpage-network:
    driver: bridge
    name: superpage-network

volumes:
  model_data:
    name: superpage-model-data
