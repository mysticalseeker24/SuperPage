version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: superpage-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: superpage123
      MONGO_INITDB_DATABASE: superpage
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - superpage-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Training Service (runs first to create model)
  training-service:
    build:
      context: ./backend/training_service
      dockerfile: Dockerfile
    container_name: superpage-training
    restart: "no"  # Run once to train model
    environment:
      - MONGODB_URL=mongodb://admin:superpage123@mongodb:27017/superpage?authSource=admin
      - DATABASE_NAME=superpage
    volumes:
      - model_data:/app/models
      - ./Dataset:/app/Dataset:ro
    networks:
      - superpage-network
    depends_on:
      mongodb:
        condition: service_healthy
    command: ["python", "train_federated.py", "--rounds", "5", "--lr", "0.001", "--batch-size", "32"]

  # Ingestion Service
  ingestion-service:
    build:
      context: ./backend/ingestion_service
      dockerfile: Dockerfile
    container_name: superpage-ingestion
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - FIRECRAWL_API_KEY=fc-62e1fc5b845c40948b28fd133fbef7cf
      - MONGODB_URL=mongodb://admin:superpage123@mongodb:27017/superpage?authSource=admin
      - DATABASE_NAME=superpage
      - SERVICE_NAME=ingestion-service
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=4
    networks:
      - superpage-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Preprocessing Service
  preprocessing-service:
    build:
      context: ./backend/preprocessing_service
      dockerfile: Dockerfile
    container_name: superpage-preprocessing
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGODB_URL=mongodb://admin:superpage123@mongodb:27017/superpage?authSource=admin
      - DATABASE_NAME=superpage
      - TOKENIZER_MODEL=distilbert-base-uncased
      - MAX_TEXT_LENGTH=512
      - MAX_FEATURES=100
      - SCALER_TYPE=minmax
      - SERVICE_NAME=preprocessing-service
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8001
      - WORKERS=2
    networks:
      - superpage-network
    depends_on:
      mongodb:
        condition: service_healthy
      ingestion-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prediction Service
  prediction-service:
    build:
      context: ./backend/prediction_service
      dockerfile: Dockerfile
    container_name: superpage-prediction
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - MODEL_PATH=/app/models/latest/fundraising_model.pth
      - SCALER_PATH=/app/models/latest/scaler.pkl
      - SHAP_BACKGROUND_SAMPLES=100
      - SERVICE_NAME=prediction-service
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8002
      - WORKERS=2
    volumes:
      - model_data:/app/models:ro
    networks:
      - superpage-network
    depends_on:
      training-service:
        condition: service_completed_successfully
      preprocessing-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Blockchain Service
  blockchain-service:
    build:
      context: ./backend/blockchain_service
      dockerfile: Dockerfile
    container_name: superpage-blockchain
    restart: unless-stopped
    ports:
      - "8003:8003"
    environment:
      - BLOCKCHAIN_PRIVATE_KEY=a8a6f100ed77edf366914903d669367174436ad272085a414f0a11033d04936e
      - SUPERPAGE_CONTRACT_ADDRESS=0x45341d82d59b3C4C43101782d97a4dBb97a42dba
      - BLOCKCHAIN_NETWORK_URL=https://sepolia.infura.io/v3/ea1e0f21469f412995bdaaa76ac1c266
      - HARDHAT_PROJECT_PATH=./
      - GAS_LIMIT=500000
      - GAS_PRICE=20000000000
      - PREDICTION_SERVICE_URL=http://prediction-service:8002
      - INFURA_PROJECT_ID=ea1e0f21469f412995bdaaa76ac1c266
      - ETHERSCAN_API_KEY=PEK4R6W3IDZGATUF3JDU7KTGBCGWM6UJRA
      - NODE_ENV=development
      - LOG_LEVEL=info
    networks:
      - superpage-network
    depends_on:
      prediction-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # System Monitor (Optional - for monitoring all services)
  monitor:
    image: prom/prometheus:latest
    container_name: superpage-monitor
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - superpage-network
    depends_on:
      - ingestion-service
      - preprocessing-service
      - prediction-service
      - blockchain-service

networks:
  superpage-network:
    driver: bridge
    name: superpage-network

volumes:
  mongodb_data:
    name: superpage-mongodb-data
  model_data:
    name: superpage-model-data
